!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".js-profile-title"),s=document.querySelector(".js-profile-description"),n=(document.querySelector(".js-profile-modal-title"),document.querySelector(".js-profile-modal-description"),document.querySelector(".js-profile-edit-button")),o=document.querySelector(".js-profile-edit-modal"),r=document.forms.profileform,i=document.querySelector(".profile__add-button"),a=document.querySelector(".js-new-card-modal"),l=document.forms.newcardform,c=(document.querySelector("#title-image"),document.querySelector("#image-url"),document.querySelector(".js-card-list")),u=(document.querySelectorAll(".modal__close"),document.querySelector(".js-expand-img-modal"));var m=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)]}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_toggleButtonState(){this._hasValidInputs(this._inputElements)?this.disableBtn():(this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1)}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_hasValidInputs(e){return!e.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._submitBtn=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class d{constructor(e,t,s){this._name=e.name,this._link=e.link,this._handleImgClick=s,this._data=e,this._cardSelector=t}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__text").textContent=this._name,this._element}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){const e=this._element.querySelector(".card__like-button"),t=this._element.querySelector(".card__trash-button"),s=this._element.querySelector(".card__image");e.addEventListener("click",(()=>{e.classList.toggle("card__like-button_active")})),t.addEventListener("click",(()=>{this._element.remove(this._link,this._name)})),s.addEventListener("click",(()=>{this._handleImgClick(this._data)}))}}class _{constructor(e){this._popupElement=e}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close(),close(this._popupElement)}setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("mousedown",(t=>{t.target.classList.contains("modal")&&close(e)}))}))}}class p extends _{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e={name:document.querySelector("#title-image").value,link:document.querySelector("#image-url").value},t=document.querySelector(".js-profile-title"),s=document.querySelector(".js-profile-description");return t.textContent=document.querySelector(".js-profile-modal-title").value,s.textContent=document.querySelector(".js-profile-modal-description").value,e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}open(){super.open()}close(){this._popupForm.reset(),super.close()}}const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=S(e);h.addItem(t)}},c);function S(e){return new d(e,"#card-template",f).generateCard()}h.renderItems();const g=new class{constructor(e,t){this._name=e,this._job=t}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{newName:t,newJob:s}=e;t&&(this._name.textContent=t),s&&(this._job.textContent=s)}}(t,s),v=new p(o,(e=>{g.setUserInfo(e),v.close()}));v.setEventListeners(),n.addEventListener("click",(()=>{const{name:e,job:n}=g.getUserInfo();t.value=e,s.value=n,v.open(),b._toggleButtonState()}));const E=new p(a,(e=>{h.addItem(S(e)),E.close()}));E.setEventListeners(),i.addEventListener("click",(()=>{E.open(),q._toggleButtonState()}));const y=new class extends _{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__img-expand"),this._name=this._popupElement.querySelector(".modal__name-title")}open(e){this._image.src=e.link,this._image.alt=e.name,this._name.textContent=e.name,super.open()}close(){this._image.src="",this._image.alt="",this._name.textContent="",super.close()}}(u);function f(e){y.open(e)}y.setEventListeners();const b=new m(e,r),q=new m(e,l);b.enableValidation(),q.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,