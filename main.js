!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},t=document.querySelector(".js-profile-title"),s=document.querySelector(".js-profile-description"),n=document.querySelector(".js-profile-modal-title"),o=document.querySelector(".js-profile-modal-description"),r=document.querySelector(".js-profile-edit-button"),i=document.forms.profileform,a=document.querySelector(".profile__add-button"),l=document.forms.newcardform,c=(document.querySelector("#title-image"),document.querySelector("#image-url"),document.querySelector(".js-card-list"));document.querySelectorAll(".modal__close");class u{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)]}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}toggleButtonState(){this._hasValidInputs(this._inputElements)?this.disableBtn():(this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1)}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_hasValidInputs(e){return!e.every((e=>e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._submitBtn=this._form.querySelector(this._submitButtonSelector),this.toggleButtonState(),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class m{constructor(e,t,s){this._name=e.name,this._link=e.link,this._handleImgClick=s,this._data=e,this._cardSelector=t,this._element=this._getTemplate(),this._likeBtn=this._element.querySelector(".card__like-button"),this._deleteBtn=this._element.querySelector(".card__trash-button"),this._cardImg=this._element.querySelector(".card__image")}generateCard(){return this._setEventListeners(),this._element}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__text").textContent=this._name,this._likeBtn.addEventListener("click",(()=>{this._likeBtn.classList.toggle("card__like-button_active")})),this._deleteBtn.addEventListener("click",(()=>{this._element.remove()})),this._cardImg.addEventListener("click",(()=>{this._handleImgClick(this._data)}))}}class d{constructor(e){this._popupElement=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.querySelector(".modal__close").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal")&&this.close()}))}}class _ extends d{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".modal__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._popupForm.reset()}))}}const h=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=p(e);h.addItem(t)}},c);function p(e){return new m(e,"#card-template",y).generateCard()}h.renderItems();const g=new class{constructor(e,t){this._name=e,this._job=t}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e){let{newName:t,newJob:s}=e;t&&(this._name.textContent=t),s&&(this._job.textContent=s)}}(t,s),E=new _(".js-profile-edit-modal",(e=>{g.setUserInfo(e),E.close()}));E.setEventListeners(),r.addEventListener("click",(()=>{const{name:e,job:t}=g.getUserInfo();n.value=e,o.value=t,E.open(),f.toggleButtonState()}));const v=new _(".js-new-card-modal",(e=>{h.addItem(p(e)),v.close()}));v.setEventListeners(),a.addEventListener("click",(()=>{v.open(),b.toggleButtonState()}));const S=new class extends d{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__img-expand"),this._name=this._popupElement.querySelector(".modal__name-title")}open(e){this._image.src=e.link,this._image.alt=e.name,this._name.textContent=e.name,super.open()}close(){this._image.src="",this._image.alt="",this._name.textContent="",super.close()}}(".js-expand-img-modal");function y(e){S.open(e)}S.setEventListeners();const f=new u(e,i),b=new u(e,l);f.enableValidation(),b.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,